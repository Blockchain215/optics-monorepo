/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestReplica, TestReplicaInterface } from "../TestReplica";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_localDomain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32[2]",
        name: "newRoot",
        type: "bytes32[2]",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature2",
        type: "bytes",
      },
    ],
    name: "DoubleUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "homeDomain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "acceptableRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "committedRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "confirmAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[2]",
        name: "_newRoot",
        type: "bytes32[2]",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_signature2",
        type: "bytes",
      },
    ],
    name: "doubleUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "homeDomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_remoteDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_committedRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_optimisticSeconds",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum Replica.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optimisticSeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "process",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "prove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "remoteDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "setCommittedRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setFailed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "setMessagePending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_remoteDomain",
        type: "uint32",
      },
    ],
    name: "setRemoteDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
    ],
    name: "setUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum Common.States",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "testBranchRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "testHomeDomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testProcess",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updater",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051612d9b380380612d9b8339818101604052606081101561003357600080fd5b50516001600160e01b031960e082901b16608052620cf85060a0819052613a9860c081905263ffffffff90921691612d0361009860003980610ac55280610fac525080610f8b528061108652806117eb525080610d235280610d5b5250612d036000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063961681dc116100f9578063b61c19e811610097578063d88beda211610071578063d88beda2146107b8578063df034cd0146107c0578063e7e7a7b7146107f1578063ffa1ad741461083c576101c4565b8063b61c19e814610702578063b80777ea146107a8578063c19d93fb146107b0576101c4565b80639d54f419116100d35780639d54f419146105e3578063a33a311314610616578063a3f81d6814610633578063b31c01fb14610650576101c4565b8063961681dc1461050b57806396ae1a89146105135780639868a273146105b9576101c4565b80635146366e1161016657806367a6771d1161014057806367a6771d1461041f57806371bfb7b8146104275780638d3638f414610444578063928bc4b214610465576101c4565b80635146366e1461034657806351d7bcd71461034e5780636188af0e14610371576101c4565b80632bbd59ca116101a25780632bbd59ca146102ba578063371d3071146102f8578063399926681461033657806345630b1a1461033e576101c4565b8063146901db146101c957806319d9d21a146101d357806325e3beda146102a0575b600080fd5b6101d161085a565b005b6101d1600480360360a08110156101e957600080fd5b813591602081019181019060808101606082013564010000000081111561020f57600080fd5b82018360208201111561022157600080fd5b8035906020019184600183028401116401000000008311171561024357600080fd5b91939092909160208101903564010000000081111561026157600080fd5b82018360208201111561027357600080fd5b8035906020019184600183028401116401000000008311171561029557600080fd5b509092509050610864565b6102a8610ac3565b60408051918252519081900360200190f35b6102d7600480360360208110156102d057600080fd5b5035610ae7565b604051808260028111156102e757fe5b815260200191505060405180910390f35b610322600480360361044081101561030f57600080fd5b5080359060208101906104200135610afc565b604080519115158252519081900360200190f35b6102a8610c1c565b6102a8610c22565b6102a8610c3c565b6101d16004803603602081101561036457600080fd5b503563ffffffff16610c46565b6101d1600480360361044081101561038857600080fd5b8101906020810181356401000000008111156103a357600080fd5b8201836020820111156103b557600080fd5b803590602001918460018302840111640100000000831117156103d757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955092935050506104008201359050610c7d565b6102a8610d09565b6102a86004803603602081101561043d57600080fd5b5035610d0f565b61044c610d21565b6040805163ffffffff9092168252519081900360200190f35b6103226004803603602081101561047b57600080fd5b81019060208101813564010000000081111561049657600080fd5b8201836020820111156104a857600080fd5b803590602001918460018302840111640100000000831117156104ca57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d45945050505050565b61044c611400565b6103226004803603602081101561052957600080fd5b81019060208101813564010000000081111561054457600080fd5b82018360208201111561055657600080fd5b8035906020019184600183028401116401000000008311171561057857600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061140c945050505050565b6102a860048036036104408110156105d057600080fd5b508035906020810190610420013561141d565b6101d1600480360360208110156105f957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661145b565b6101d16004803603602081101561062c57600080fd5b50356114a8565b6103226004803603602081101561064957600080fd5b50356114bf565b6101d16004803603606081101561066657600080fd5b81359160208101359181019060608101604082013564010000000081111561068d57600080fd5b82018360208201111561069f57600080fd5b803590602001918460018302840111640100000000831117156106c157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506114e8945050505050565b6101d16004803603602081101561071857600080fd5b81019060208101813564010000000081111561073357600080fd5b82018360208201111561074557600080fd5b8035906020019184600183028401116401000000008311171561076757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611738945050505050565b6102a86117c2565b6102d76117c6565b6102a86117e9565b6107c861180d565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101d16004803603608081101561080757600080fd5b5063ffffffff8135169073ffffffffffffffffffffffffffffffffffffffff602082013516906040810135906060013561182f565b6108446119c6565b6040805160ff9092168252519081900360200190f35b6108626119cb565b565b6002600054760100000000000000000000000000000000000000000000900460ff16600281111561089157fe5b14156108fe57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6661696c65642073746174650000000000000000000000000000000000000000604482015290519081900360640190fd5b604080516020601f86018190048102820181019092528481526109409188918835918890889081908401838280828437600092019190915250611a0e92505050565b801561098f575061098f86866001602002013584848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a0e92505050565b80156109a057508435602086013514155b15610abb576109ad61085a565b7f2c3f60bab4170347826231b75a920b5053941ddebc6eed6fd2c25721648b186f8686868686866040518087815260200186600260200280828437600083820152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690910182810360409081018252810186905290506020810160608201878780828437600083820152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690910184810383528581526020019050858580828437600083820152604051601f9091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169092018290039a509098505050505050505050a15b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60356020526000908152604090205460ff1681565b60008060008581526035602052604090205460ff166002811115610b1c57fe5b14610b8857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f214d6573736167655374617475732e4e6f6e6500000000000000000000000000604482015290519081900360640190fd5b6000610bbe858560208060200260405190810160405280929190826020800280828437600092019190915250879150611aa69050565b9050610bc9816114bf565b15610c0f575050600083815260356020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155610c15565b60009150505b9392505050565b60325481565b603154600090610c379063ffffffff16611b51565b905090565b6000610c37610c22565b603180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff92909216919091179055565b610c8f83805190602001208383610afc565b610cfa57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2170726f76650000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b610d0383610d45565b50505050565b60015481565b60346020526000908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610d528382611bc6565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610da67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316611bea565b63ffffffff1614610e1857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f2164657374696e6174696f6e0000000000000000000000000000000000000000604482015290519081900360640190fd5b6000610e457fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316611c1b565b9050600160008281526035602052604090205460ff166002811115610e6657fe5b14610ed257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f2170726f76656e00000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60335460ff16600114610f4657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f217265656e7472616e7400000000000000000000000000000000000000000000604482015290519081900360640190fd5b603380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009081169091556000828152603560205260409020805490911660021790557f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000015a101561103c57604080517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048083019190915260248201527f2167617300000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60006110697fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008416611c5a565b9050606073ffffffffffffffffffffffffffffffffffffffff82167f00000000000000000000000000000000000000000000000000000000000000006110d07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008716611c6d565b6110fb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008816611c9d565b6111506111297fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008a16611cce565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000016611d3f565b604051602401808463ffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156111a257818101518382015260200161118a565b50505050905090810190601f1680156111cf5780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f56d5d47500000000000000000000000000000000000000000000000000000000178152905182519297509550859450925090508083835b6020831061129757805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909201916020918201910161125a565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038160008787f1925050503d80600081146112fa576040519150601f19603f3d011682016040523d82523d6000602084013e6112ff565b606091505b5060405181519297509092508291819060208401908083835b6020831061135557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611318565b5181516020939093036101000a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018019909116921691909117905260405192018290038220935050871515915085907fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe4890600090a45050603380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055509092915050565b60315463ffffffff1681565b600061141782610d45565b92915050565b6000611453848460208060200260405190810160405280929190826020800280828437600092019190915250869150611aa69050565b949350505050565b6000805473ffffffffffffffffffffffffffffffffffffffff90921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff909216919091179055565b600181815560009182526034602052604090912055565b600081815260346020526040812054806114dd5760009150506114e3565b42101590505b919050565b6002600054760100000000000000000000000000000000000000000000900460ff16600281111561151557fe5b141561158257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6661696c65642073746174650000000000000000000000000000000000000000604482015290519081900360640190fd5b60015483146115f257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f742063757272656e74207570646174650000000000000000000000000000604482015290519081900360640190fd5b6115fd838383611a0e565b61166857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f2175706461746572207369670000000000000000000000000000000000000000604482015290519081900360640190fd5b611670610862565b6032546000838152603460209081526040808320429094019093556001859055603154835182815285518184015285518795899563ffffffff909416947f608828ad904a0c9250c09004ba7226efb08f35a5c815bb3f76b5a8a271cd08b29489949384938401928601918190849084905b838110156116f95781810151838201526020016116e1565b50505050905090810190601f1680156117265780820380516001836020036101000a031916815260200191505b509250505060405180910390a4505050565b60006117448282611bc6565b90506001603560006117777fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008516611c1b565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660018360028111156117b957fe5b02179055505050565b4290565b600054760100000000000000000000000000000000000000000000900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff1681565b600054610100900460ff16806118485750611848611d83565b80611856575060005460ff16155b6118ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612bbc602e913960400191505060405180910390fd5b600054610100900460ff1615801561191157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b61191a84611d94565b6033805460017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009091168117909155603180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff8816179055838155600084815260346020526040902055603282905580156119bf57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b5050505050565b600081565b600080547fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16760200000000000000000000000000000000000000000000179055565b600080611a19610c22565b8585604051602001808481526020018381526020018281526020019350505050604051602081830303815290604052805190602001209050611a5a81611f29565b60005490915062010000900473ffffffffffffffffffffffffffffffffffffffff16611a868285611f7a565b73ffffffffffffffffffffffffffffffffffffffff161495945050505050565b8260005b6020811015611b4957600183821c166000858360208110611ac757fe5b602002015190508160011415611b0d5780846040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209350611b3f565b838160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012093505b5050600101611aaa565b509392505050565b6040805160e09290921b7fffffffff00000000000000000000000000000000000000000000000000000000166020808401919091527f4f5054494353000000000000000000000000000000000000000000000000000060248401528151808403600a018152602a909301909152815191012090565b815160009060208401611be164ffffffffff85168284612014565b95945050505050565b60006114177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000083166028600461206a565b600080611c278361208b565b6bffffffffffffffffffffffff1690506000611c428461209f565b6bffffffffffffffffffffffff169091209392505050565b6000611417611c68836120b3565b6120e4565b60006114177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000831682600461206a565b60006114177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316600460206120e7565b6000611417604c80611d017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000861661209f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000861692916bffffffffffffffffffffffff91909116036000612292565b6060600080611d4d8461209f565b6bffffffffffffffffffffffff1690506040519150819250611d728483602001612318565b508181016020016040529052919050565b6000611d8e30612444565b15905090565b600054610100900460ff1680611dad5750611dad611d83565b80611dbb575060005460ff16155b611e10576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612bbc602e913960400191505060405180910390fd5b600054610100900460ff16158015611e7657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000073ffffffffffffffffffffffffffffffffffffffff851602177fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff167601000000000000000000000000000000000000000000001790558015611f2557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b5050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b60008151604114611fec57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a61200a8682858561244a565b9695505050505050565b6000806120218484612638565b9050604051811115612031575060005b8061205f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000915050610c15565b611be18585856126aa565b60008160200360080260ff166120818585856120e7565b901c949350505050565b60781c6bffffffffffffffffffffffff1690565b60181c6bffffffffffffffffffffffff1690565b60006114177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316602c60206120e7565b90565b600060ff82166120f957506000610c15565b6121028461209f565b6bffffffffffffffffffffffff1661211d8460ff8516612638565b11156121fc5761215e61212f8561208b565b6bffffffffffffffffffffffff166121468661209f565b6bffffffffffffffffffffffff16858560ff166126bd565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156121c15781810151838201526020016121a9565b50505050905090810190601f1680156121ee5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60208260ff161115612259576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180612c0c603a913960400191505060405180910390fd5b6008820260006122688661208b565b6bffffffffffffffffffffffff169050600061228383612818565b91909501511695945050505050565b60008061229e8661208b565b6bffffffffffffffffffffffff1690506122b786612861565b6122cb856122c58489612638565b90612638565b11156122fa577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000915050611453565b6123048186612638565b905061200a8364ffffffffff168286612014565b60006123238361288b565b612378576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612c466028913960400191505060405180910390fd5b6123818361289d565b6123d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612c6e602b913960400191505060405180910390fd5b60006123e18461209f565b6bffffffffffffffffffffffff16905060006123fc8561208b565b6bffffffffffffffffffffffff16905060006040519050848111156124215760206060fd5b8285848460045afa5061200a612436876128da565b64ffffffffff1686856126aa565b3b151590565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156124c5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612b796022913960400191505060405180910390fd5b8360ff16601b14806124da57508360ff16601c145b61252f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612bea6022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561258b573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611be157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b8181018281101561141757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4f766572666c6f7720647572696e67206164646974696f6e2e00000000000000604482015290519081900360640190fd5b606092831b9190911790911b1760181b90565b606060006126ca866128e0565b91505060006126d8866128e0565b91505060006126e6866128e0565b91505060006126f4866128e0565b915050838383836040516020018080612c99603591397fffffffffffff000000000000000000000000000000000000000000000000000060d087811b821660358401527f2077697468206c656e6774682030780000000000000000000000000000000000603b84015286901b16604a8201526050016021612b9b82397fffffffffffff000000000000000000000000000000000000000000000000000060d094851b811660218301527f2077697468206c656e677468203078000000000000000000000000000000000060278301529290931b9091166036830152507f2e00000000000000000000000000000000000000000000000000000000000000603c82015260408051601d818403018152603d90920190529b9a5050505050505050505050565b7f80000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091011d90565b600061286c8261209f565b6128758361208b565b016bffffffffffffffffffffffff169050919050565b6000612896826129b4565b1592915050565b60006128a8826128da565b64ffffffffff1664ffffffffff14156128c3575060006114e3565b60006128ce83612861565b60405110199392505050565b60d81c90565b600080601f5b600f8160ff1611156129485760ff600882021684901c612905816129dc565b61ffff16841793508160ff1660101461292057601084901b93505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016128e6565b50600f5b60ff8160ff1610156129ae5760ff600882021684901c61296b816129dc565b61ffff16831792508160ff1660001461298657601083901b92505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161294c565b50915091565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000009081161490565b60006129ee60048360ff16901c612a0c565b60ff161760081b62ffff0016612a0382612a0c565b60ff1617919050565b600060f08083179060ff82161415612a285760309150506114e3565b8060ff1660f11415612a3e5760319150506114e3565b8060ff1660f21415612a545760329150506114e3565b8060ff1660f31415612a6a5760339150506114e3565b8060ff1660f41415612a805760349150506114e3565b8060ff1660f51415612a965760359150506114e3565b8060ff1660f61415612aac5760369150506114e3565b8060ff1660f71415612ac25760379150506114e3565b8060ff1660f81415612ad85760389150506114e3565b8060ff1660f91415612aee5760399150506114e3565b8060ff1660fa1415612b045760619150506114e3565b8060ff1660fb1415612b1a5760629150506114e3565b8060ff1660fc1415612b305760639150506114e3565b8060ff1660fd1415612b465760649150506114e3565b8060ff1660fe1415612b5c5760659150506114e3565b8060ff1660ff1415612b725760669150506114e3565b5091905056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c75652e20417474656d7074656420746f20696e646578206174206f6666736574203078496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445434453413a20696e76616c6964207369676e6174757265202776272076616c756554797065644d656d566965772f696e646578202d20417474656d7074656420746f20696e646578206d6f7265207468616e20333220627974657354797065644d656d566965772f636f7079546f202d204e756c6c20706f696e74657220646572656654797065644d656d566965772f636f7079546f202d20496e76616c696420706f696e74657220646572656654797065644d656d566965772f696e646578202d204f76657272616e2074686520766965772e20536c696365206973206174203078a2646970667358221220d398bdd9a4188942dd5bf2485906efe6dd89f3bd08b7ddba9db794e5b937778864736f6c63430007060033";

export class TestReplica__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _localDomain: BigNumberish,
    arg1: BigNumberish,
    arg2: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestReplica> {
    return super.deploy(
      _localDomain,
      arg1,
      arg2,
      overrides || {}
    ) as Promise<TestReplica>;
  }
  getDeployTransaction(
    _localDomain: BigNumberish,
    arg1: BigNumberish,
    arg2: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _localDomain,
      arg1,
      arg2,
      overrides || {}
    );
  }
  attach(address: string): TestReplica {
    return super.attach(address) as TestReplica;
  }
  connect(signer: Signer): TestReplica__factory {
    return super.connect(signer) as TestReplica__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestReplicaInterface {
    return new utils.Interface(_abi) as TestReplicaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestReplica {
    return new Contract(address, _abi, signerOrProvider) as TestReplica;
  }
}
